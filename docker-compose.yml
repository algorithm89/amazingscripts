

version: '3'

services:
  traefik1:
    image: traefik:1.6
    restart: always
    container_name: traefik1
    ports:
      - "8081:8081"
      - "443:443"
      
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.toml:/traefik.toml
      - ./certs/:/certs/
    networks:
      - proxy
    labels:
     - traefik.frontend.entryPoints=http,https
     - traefik.backend=traffic
     - traefik.frontend.rule=Host:traffic.clouds.net
     - traefik.enable=true
     - traefik.port=443
     - traefik.docker.network=proxy 

    command:
      - --entrypoints=Name:https Address::443 TLS




  nginx:
    container_name: moby_cock_nginx
    image: nginx:latest
    
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl:ro
      - ./html1:/usr/share/nginx/html1:ro
      - ./html2:/usr/share/nginx/html2:ro

    ports:

    networks:
      - proxy
    label:
     - traefik.frontend.entryPoints=http,https
     - traefik.backend=traffic
     - traefik.frontend.rule=Host:ns4.clouds.net
     - traefik.enable=true
     - traefik.port=80
     - traefik.docker.network=proxy 
  
  mysql:
    image: mysql:5.7
    container_name: sqldb1
    networks:
      - proxy
    volumes:    
      - /opt/mysql:/var/lib/mysql

    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=toor89
      - MYSQL_DATABASE=expenses
      - MYSQL_USER=king
      - MYSQL_PASSWORD=toor89
    labels:
     - traefik.frontend.rule=Host:db.clouds.net                 
     - traefik.port=3306
     - traefik.enable=true
     - traefik.docker.network=proxy 
     - traefik.frontend.entryPoints=http,https

  portainer:
    image: portainer/portainer
    networks:
      - proxy
    restart: always
    command: -H unix:///var/run/docker.sock
    ports:
     - 9000:9000

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data2:/data
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.port=9000
      - traefik.frontend.rule=Host:portainer.clouds.net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - /opt/prometheus/conf:/etc/prometheus
      - /opt/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    
    ports:
     - 9090:9090 

    networks:
      - proxy
    
    labels:
     - traefik.port=9090
     - traefik.front.rule=Host:cloud.clouds.net
     - traefik.enable=true
     - traefik.default.protocol=http

  node-exporter:
    image: prom/node-exporter
    container_name: nodeprom
    ports:
      - 9100:9100
    labels:
  
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.port=9100
      - traefik.frontend.rule=Host:node.clouds.net

  grafana:
    image: grafana/grafana
    container_name: grafa
    ports: 
      - 3000:3000
    volumes: 
      - /opt/grafana_data:/var/lib/grafana:rw
    labels:
  
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.port=3000
      - traefik.frontend.rule=Host:grafana.clouds.net
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin007
      - GF_PATHS_LOGS=/var/logs/grafana
      - GF_SERVER_ROOT_URL=http://grafana.clouds.net:3000

    depends_on:
      - prometheus  
  
    

networks:
  proxy:
    external: true
  web:
    external: false


volumes:
  portainer-data2:
    external: true
